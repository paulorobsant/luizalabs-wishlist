"""empty message

Revision ID: 888b364687f7
Revises: 0a8a4c3e4ddf
Create Date: 2021-06-22 15:01:45.005132

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '888b364687f7'
down_revision = '0a8a4c3e4ddf'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('rating_form',
    sa.Column('id', postgresql.UUID(as_uuid=True), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('title', sa.String(length=128), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema='public'
    )
    op.create_index(op.f('ix_public_rating_form_title'), 'rating_form', ['title'], unique=True, schema='public')
    op.create_table('rating_question',
    sa.Column('id', postgresql.UUID(as_uuid=True), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('type', postgresql.ENUM('TEXT', 'NUMBER', name='ratingquestiontype'), nullable=False),
    sa.Column('question', sa.String(length=256), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='public'
    )
    op.create_table('rating_forms_questions',
    sa.Column('id', postgresql.UUID(as_uuid=True), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('rating_question_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('rating_form_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['rating_form_id'], ['public.rating_form.id'], ),
    sa.ForeignKeyConstraint(['rating_question_id'], ['public.rating_question.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='public'
    )
    op.create_table('match_rating_answer',
    sa.Column('id', postgresql.UUID(as_uuid=True), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('answer', sa.String(length=512), nullable=False),
    sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('match_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('rating_question_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['match_id'], ['public.match.id'], ),
    sa.ForeignKeyConstraint(['rating_question_id'], ['public.rating_question.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['public.user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='public'
    )
    op.create_index(op.f('ix_public_match_rating_answer_match_id'), 'match_rating_answer', ['match_id'], unique=False, schema='public')
    op.create_table('match_review',
    sa.Column('id', postgresql.UUID(as_uuid=True), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('comment', sa.String(length=256), nullable=False),
    sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('match_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['match_id'], ['public.match.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['public.user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='public'
    )
    op.create_index(op.f('ix_public_match_review_comment'), 'match_review', ['comment'], unique=True, schema='public')
    op.drop_constraint('match_learner_id_fkey', 'match', type_='foreignkey')
    op.drop_constraint('match_mentor_id_fkey', 'match', type_='foreignkey')
    op.create_foreign_key(None, 'match', 'user', ['learner_id'], ['id'], source_schema='public', referent_schema='public')
    op.create_foreign_key(None, 'match', 'user', ['mentor_id'], ['id'], source_schema='public', referent_schema='public')
    op.drop_constraint('match_request_user_id_fkey', 'match_request', type_='foreignkey')
    op.create_foreign_key(None, 'match_request', 'user', ['user_id'], ['id'], source_schema='public', referent_schema='public')
    op.drop_column('user', 'username')
    op.drop_constraint('user_company_user_id_fkey', 'user_company', type_='foreignkey')
    op.drop_constraint('user_company_company_id_fkey', 'user_company', type_='foreignkey')
    op.create_foreign_key(None, 'user_company', 'user', ['user_id'], ['id'], source_schema='public', referent_schema='public')
    op.create_foreign_key(None, 'user_company', 'company', ['company_id'], ['id'], source_schema='public', referent_schema='public')
    op.drop_constraint('user_profile_user_id_fkey', 'user_profile', type_='foreignkey')
    op.create_foreign_key(None, 'user_profile', 'user', ['user_id'], ['id'], source_schema='public', referent_schema='public')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'user_profile', schema='public', type_='foreignkey')
    op.create_foreign_key('user_profile_user_id_fkey', 'user_profile', 'user', ['user_id'], ['id'])
    op.drop_constraint(None, 'user_company', schema='public', type_='foreignkey')
    op.drop_constraint(None, 'user_company', schema='public', type_='foreignkey')
    op.create_foreign_key('user_company_company_id_fkey', 'user_company', 'company', ['company_id'], ['id'])
    op.create_foreign_key('user_company_user_id_fkey', 'user_company', 'user', ['user_id'], ['id'])
    op.add_column('user', sa.Column('username', sa.VARCHAR(length=128), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'match_request', schema='public', type_='foreignkey')
    op.create_foreign_key('match_request_user_id_fkey', 'match_request', 'user', ['user_id'], ['id'])
    op.drop_constraint(None, 'match', schema='public', type_='foreignkey')
    op.drop_constraint(None, 'match', schema='public', type_='foreignkey')
    op.create_foreign_key('match_mentor_id_fkey', 'match', 'user', ['mentor_id'], ['id'])
    op.create_foreign_key('match_learner_id_fkey', 'match', 'user', ['learner_id'], ['id'])
    op.drop_index(op.f('ix_public_match_review_comment'), table_name='match_review', schema='public')
    op.drop_table('match_review', schema='public')
    op.drop_index(op.f('ix_public_match_rating_answer_match_id'), table_name='match_rating_answer', schema='public')
    op.drop_table('match_rating_answer', schema='public')
    op.drop_table('rating_forms_questions', schema='public')
    op.drop_table('rating_question', schema='public')
    op.drop_index(op.f('ix_public_rating_form_title'), table_name='rating_form', schema='public')
    op.drop_table('rating_form', schema='public')
    # ### end Alembic commands ###
